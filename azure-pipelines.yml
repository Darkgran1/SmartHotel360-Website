# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      curl -s -L https://raw.github.com/blackducksoftware/detect_rescan/main/detect_rescan.sh > detect_rescan.sh
      ./detect_rescan.sh --blackduck.trust.cert=true --detect.detector.search.depth=1 --detect.project.name=Azure-SE-DEMO --detect.project.version.name=1.0 --report --testxml
  env:
    BLACKDUCK_API_TOKEN: $(blackduck.api.token)
    BLACKDUCK_URL: $(blackduck.url)

- task: PublishTestResults@2
  displayName: 'Publish Policy Violation Results **/policies.xml'
  inputs:
    testResultsFiles: '**/policies.xml'
    testRunTitle: 'Black Duck Policy Violations'

- task: PublishTestResults@1
  displayName: 'Publish Vulnerability Results **/vulns.xml'
  inputs:
    testResultsFiles: '**/vulns.xml'
    testRunTitle: 'Black Duck Vulnerabilities'